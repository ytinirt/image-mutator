apiVersion: apps/v1
kind: Deployment
metadata:
  name: image-registry-mutator
  labels:
    app: image-registry-mutator
spec:
  replicas: 1
  selector:
    matchLabels:
      app: image-registry-mutator
  template:
    metadata:
      labels:
        app: image-registry-mutator
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 123456
      containers:
      - name: server
        image: ytinirt/image-registry-mutator:latest
        imagePullPolicy: Always
        env:
        - name: IRM_MY_NS
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: IRM_BYPASS_ME
          value: "If present, bypass image registry mutator's pod itself, no matter what value it is"
        #- name: IRM_BYPASS_NS
        #  value: "Bypass pod from those namespaces, CSV encoding to support multiple namespaces"
        #- name: IRM_REGISTRY
        #  value: "If present, replace registry with it, otherwise do nothing"
        ports:
        - containerPort: 8443
          name: api
        volumeMounts:
        - name: tls-certs
          mountPath: /run/secrets/tls
          readOnly: true
      volumes:
      - name: tls-certs
        secret:
          secretName: image-registry-mutator-tls
---
apiVersion: v1
kind: Service
metadata:
  name: image-registry-mutator
spec:
  selector:
    app: image-registry-mutator
  ports:
    - port: 443
      targetPort: api
---
apiVersion: admissionregistration.k8s.io/v1beta1
kind: MutatingWebhookConfiguration
metadata:
  name: image-registry-mutator
webhooks:
  - name: image-registry-mutator.${DEPLOY_NAMESPACE}.svc
    clientConfig:
      service:
        name: image-registry-mutator
        namespace: ${DEPLOY_NAMESPACE}
        path: "/mutate"
      caBundle: ${CA_PEM_B64}
    rules:
      - operations: [ "CREATE" ]
        apiGroups: [""]
        apiVersions: ["v1"]
        resources: ["pods"]
